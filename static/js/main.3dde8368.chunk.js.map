{"version":3,"sources":["components/BiteLog.js","components/BlowDetector.js","App.js","serviceWorker.js","index.js"],"names":["BiteLog","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","react_default","a","createElement","List","bites","map","bite","primaryText","secondaryText","time","toTimeString","leftIcon","error_default","Component","Bite","Date","BlowDetector","addBite","now","state","isRecording","length","max_bite_length","setState","concat","Audio","play","startRecording","stopRecording","onStop","blobObject","blobURL","handleThresholdChange","event","value","threshold","detector","style","display","justifyContent","es","className","record","backgroundColor","visualSetting","analyser","canvasCtx","canvas","width","height","strokeColor","fftSize","bufferLength","frequencyBinCount","origBacgroundColor","dataArray","Uint8Array","clearRect","draw","requestAnimationFrame","getByteFrequencyData","reducedDataArray","i","sum","j","total","beginPath","arc","Math","min","PI","fillStyle","fill","stepSize","strokeStyle","normalized","r","stroke","audioBitsPerSecond","onStart","onSave","onData","Slider_default","defaultValue","max","onChange","index_es","secondary","disabled","onClick","mic_default","stop_default","components_BiteLog","App","components_BlowDetector","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3dde8368.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {List, ListItem} from 'material-ui/List';\nimport Error                from 'material-ui/svg-icons/alert/error';\n\nclass BiteLog extends Component {\n  constructor(props){\n    super(props);\n    this.props = props;\n  }\n\n  render() {\n    return (\n       <List>\n        {this.props.bites.map(bite => (\n         <ListItem\n           primaryText=\"Bite detected\"\n           secondaryText={bite.time.toTimeString()}\n           leftIcon={<Error/>}\n         />\n        ))} \n       </List>\n    );\n  }\n}\n\nexport default BiteLog;\n","import React, { Component } from 'react';\nimport BiteLog from './BiteLog.js';\nimport { ReactMic } from '@timthelion/react-mic';\nimport { FloatingActionButton }   from 'material-ui';\nimport Slider from 'material-ui/Slider';\nimport MicrophoneOn                from 'material-ui/svg-icons/av/mic';\nimport MicrophoneOff               from 'material-ui/svg-icons/av/stop';\n\n\nfunction mkThreashold (detector) {\n  return function thresholdVisualizer(analyser, canvasCtx, canvas, width, height, backgroundColor, strokeColor) {\n    analyser.fftSize = 32;\n    const bufferLength = analyser.frequencyBinCount;\n    let origBacgroundColor = backgroundColor;\n\n    const dataArray = new Uint8Array(bufferLength);\n     canvasCtx.clearRect(0, 0, width, height);\n     function draw() {\n      requestAnimationFrame(draw);\n       analyser.getByteFrequencyData(dataArray);\n       const reductionAmount = 3;\n      const reducedDataArray = new Uint8Array(bufferLength / reductionAmount);\n      for (let i = 0; i < bufferLength; i += reductionAmount) {\n        let sum = 0;\n        for (let j = 0; j < reductionAmount; j++) {\n          sum += dataArray[i + j];\n        }\n         reducedDataArray[i/reductionAmount] = sum / reductionAmount;\n      }\n\n      let total = 0;\n      for (let i = 0; i < reducedDataArray.length; i++) {\n        total += reducedDataArray[i];\n      }\n      if (0 < total && total < detector.state.threshold ) {\n        backgroundColor = \"#ff0000\";\n        detector.addBite();\n      } else {\n        backgroundColor = origBacgroundColor;\n      }\n\n      canvasCtx.clearRect(0, 0, width, height);\n      canvasCtx.beginPath();\n      canvasCtx.arc(width / 2, height / 2, Math.min(height, width) / 2, 0, 2 * Math.PI);\n      canvasCtx.fillStyle = backgroundColor;\n      canvasCtx.fill();\n      const stepSize = (Math.min(height, width) / 2.0) / (reducedDataArray.length);\n      canvasCtx.strokeStyle = strokeColor;\n      for (let i = 0; i < reducedDataArray.length; i++) {\n        canvasCtx.beginPath();\n        const normalized = reducedDataArray[i] / 128;\n        total += reducedDataArray[i];\n        const r = (stepSize * i) + (stepSize * normalized);\n        canvasCtx.arc(width / 2, height / 2, r, 0, 2 * Math.PI);\n        canvasCtx.stroke();\n      }\n    };\n     draw();\n  }\n}\n\nclass Bite {\n  constructor(props){\n    this.time = new Date()\n  }\n}\n\nclass BlowDetector extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      blobObject: null,\n      isRecording: false,\n      threshold: 1000,\n      bites: [],\n      max_bite_length: 4000 // ms\n    }\n  }\n\n  addBite= () => {\n    let now = new Date()\n    if (this.state.isRecording && (!this.state.bites.length || now - this.state.bites[this.state.bites.length -1].time > this.state.max_bite_length)) {\n      this.setState({\n         bites : this.state.bites.concat(new Bite())\n       });\n      let sound = new Audio(process.env.PUBLIC_URL + '/378394__13fpanska-stranska-michaela__school-bell.mp3');\n      sound.play();  \n    }\n  }\n\n  startRecording= () => {\n    this.setState({\n      isRecording: true\n    });\n  }\n\n  stopRecording= () => {\n    this.setState({\n      isRecording: false\n    });\n  }\n\n  onStop= (blobObject) => {\n    this.setState({\n      blobURL : blobObject.blobURL\n    });\n  }\n\n  handleThresholdChange = (event, value) => {\n   this.setState({threshold: value});\n  }\n\n  render() {\n    const { isRecording } = this.state;\n    return (\n        <div>\n          <br/>\n          <div style={{display: 'flex', justifyContent: 'center'}}>\n          <ReactMic\n            className=\"oscilloscope\"\n            record={isRecording}\n            backgroundColor=\"#25541a\"\n            visualSetting={mkThreashold(this)}\n            audioBitsPerSecond= {128000}\n            onStop={this.onStop}\n            onStart={this.onStart}\n            onSave={this.onSave}\n            onData={this.onData}\n            width={200}\n            strokeColor=\"#000000\" />\n          </div>\n          <br/>\n          Drag slider to change threshold. <br/> The circle should red when the sensor is being bitten and red otherwise.\n          <br/>\n          <Slider\n            defaultValue={1000}\n            max={2000}\n            onChange={this.handleThresholdChange} />\n          <FloatingActionButton\n            className=\"btn\"\n            secondary={true}\n            disabled={isRecording}\n            onClick={this.startRecording}>\n            <MicrophoneOn />\n          </FloatingActionButton>\n          <FloatingActionButton\n            className=\"btn\"\n            secondary={true}\n            disabled={!isRecording}\n            onClick={this.stopRecording}>\n            <MicrophoneOff />\n          </FloatingActionButton>\n          <br/>\n          <BiteLog\n             bites={this.state.bites}/>\n          </div>\n    );\n  }\n}\n\nexport default BlowDetector;\n","import React, { Component } from 'react';\nimport './App.css';\nimport BlowDetector from './components/BlowDetector.js';\nimport { FlatButton,\n         MuiThemeProvider } from 'material-ui';\n\n\n\nclass App extends Component {\n  render() {\n    return (\n      <MuiThemeProvider>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <h1> Bioblow </h1>\n          <h3> relaxation • anti-teeth clenching • biofeedback </h3>\n        </header>\n        <BlowDetector/>           \n        <FlatButton href=\"https://github.com/timthelion/bioblow\">Copyright © 2018 Timothy Hobbs AGPLv3. Get source.</FlatButton>\n      </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}